{"version":3,"sources":["webpack:///src/app/components/add-cucu/add-cucu.component.ts","webpack:///src/app/components/add-cucu/add-cucu.component.html","webpack:///src/app/components/add-cucu/add-cucu.module.ts","webpack:///src/app/components/cucu-box/cucu-box.component.ts","webpack:///src/app/components/cucu-box/cucu-box.component.html","webpack:///src/app/components/cucu-box/cucu-box.module.ts","webpack:///src/app/services/db/db.service.ts","webpack:///src/app/util/date.util.ts","webpack:///src/app/util/languages.util.ts"],"names":["AddCucuComponent","formBuilder","translate","dbService","componentSize","componentShape","languages","participantsOptions","timeSlots","avatarUploadLabel","now","Date","currentHour","getHours","dayPreset","hourPreset","getTimeSlots","form","group","inviteUrl","required","validateInviteUrl","topic","userName","language","currentLang","participantsLimit","day","time","filteredTimeOptions$","valueChanges","pipe","filterString","filterTimeslots","filteredParticipantsOptions$","filterParticipantsLimit","subscribe","change","setValue","value","filterValue","toLowerCase","filter","optionValue","includes","valid","data","getRawValue","date","hours","split","minutes","setHours","setMinutes","setSeconds","console","log","avatarId","cucu","startDateString","toUTCString","createCucu","res","reset","error","event","file","target","files","name","uploadAvatar","id","status","currentMinutes","getMinutes","offset","i","slot","Math","floor","push","control","dirty","get","onAvatarFileChanged","postCucu","selector","templateUrl","styleUrls","validInviteUrl","AddCucuModule","declarations","imports","exports","CucuBoxComponent","length","imageUrl","getImageBaseUrl","parse","toLocaleTimeString","hour","minute","lang","CucuBoxModule","DbService","http","baseUrl","cucus$","fetchCucus","onLangChange","cucus","next","slice","post","fd","FormData","append","providedIn","addDays","days","result","setDate","getDate","isToday","someDate","today","getMonth","getFullYear","langs","emoji","getEmojiForLang","find","l","getLangs"],"mappings":"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","file":"default~components-home-home-module~components-how-how-module-es5.js","sourcesContent":["import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators} from '@angular/forms';\nimport {TranslateModule, TranslateService} from '@ngx-translate/core';\nimport {Observable, of} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {DbService} from '../../services/db/db.service';\nimport {addDays} from '../../util/date.util';\nimport {NbComponentShape, NbComponentSize, NbGlobalPhysicalPosition, NbToastrService} from '@nebular/theme';\nimport {getLangs} from '../../util/languages.util';\n\n@Component({\n  selector: 'app-add-cucu',\n  templateUrl: './add-cucu.component.html',\n  styleUrls: ['./add-cucu.component.scss']\n})\nexport class AddCucuComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('inviteUrlInput') inviteUrlInput: ElementRef;\n\n  componentSize: NbComponentSize = 'medium';\n  componentShape: NbComponentShape = 'rectangle';\n\n  public form: FormGroup;\n  filteredTimeOptions$: Observable<string[]>;\n  filteredParticipantsOptions$: Observable<string[]>;\n\n  languages = getLangs();\n\n  participantsOptions = ['10', '20', '50'];\n\n  timeSlots = [];\n\n  avatarUploadLabel = '';\n\n  avatarId: string;\n\n  constructor(private formBuilder: FormBuilder,\n              private translate: TranslateService,\n              private dbService: DbService,\n              // private toastrService: NbToastrService,\n  ) {\n  }\n\n  ngOnInit() {\n    const now = new Date();\n    const currentHour = now.getHours();\n    const dayPreset = currentHour > 18 ? 'Tomorrow' : 'Today';\n    const hourPreset = currentHour > 18 ? '10:00' : `${currentHour + 2}:00`;\n\n    this.timeSlots = this.getTimeSlots(dayPreset);\n    this.form = this.formBuilder.group({\n      // inviteUrl: ['https://hangouts.google.com/call/A6PK6lK45zkCf357wj-vAEEI', [Validators.required, validateInviteUrl]],\n      // topic: ['Lettura di libri in compagnia con un bel bicchiere di vino.', Validators.required],\n      // userName: ['Dario', Validators.required],\n      // language: ['it', Validators.required],\n      // participantsLimit: ['10', Validators.required],\n      // day: ['Tomorrow', Validators.required],\n      // time: ['18:00', Validators.required],\n      inviteUrl: ['', [Validators.required, validateInviteUrl]],\n      topic: ['', Validators.required],\n      userName: ['', Validators.required],\n      language: [this.translate.currentLang, Validators.required],\n      participantsLimit: ['', Validators.required],\n      day: [dayPreset, Validators.required],\n      time: [hourPreset, Validators.required],\n    });\n\n    this.filteredTimeOptions$ = of(this.timeSlots);\n    this.filteredTimeOptions$ = this.time.valueChanges\n      .pipe(startWith(''), map(filterString => this.filterTimeslots(filterString)));\n\n    this.filteredParticipantsOptions$ = of(this.participantsOptions);\n    this.filteredParticipantsOptions$ = this.participantsLimit.valueChanges\n      .pipe(startWith(''), map(filterString => this.filterParticipantsLimit(filterString)));\n\n\n    this.day.valueChanges.subscribe((change) => {\n      this.timeSlots = this.getTimeSlots(change);\n      this.time.setValue('');\n    });\n  }\n\n  private filterTimeslots(value: string): string[] {\n    if (value) {\n      const filterValue = value.toLowerCase();\n      return this.timeSlots.filter(optionValue => optionValue.toLowerCase().includes(filterValue));\n    }\n  }\n\n  private filterParticipantsLimit(value: string): string[] {\n    if (value) {\n      const filterValue = value.toLowerCase();\n      return this.participantsOptions.filter(optionValue => optionValue.toLowerCase().includes(filterValue));\n    }\n  }\n\n  ngAfterViewInit() {\n    // this.inviteUrlInput.nativeElement.focus();\n  }\n\n  public postCucu() {\n    if (this.form.valid) {\n\n      const data = this.form.getRawValue();\n      let date = new Date();\n\n      if (data.day === 'Tomorrow') {\n        date = addDays(1)(date);\n      }\n\n      const hours = data.time.split(':')[0];\n      const minutes = data.time.split(':')[1];\n      date.setHours(hours);\n      date.setMinutes(minutes);\n      date.setSeconds(0);\n      console.log(date);\n      if (!this.avatarId) {\n        this.avatarId = '';\n      }\n      const cucu = {\n        inviteUrl: data.inviteUrl,\n        topic: data.topic,\n        startDateString: date.toUTCString(),\n        userName: data.userName,\n        avatarId: this.avatarId,\n        language: data.language\n      };\n      this.dbService.createCucu(cucu).subscribe((res: any) => {\n        if (res.topic) {\n          this.avatarUploadLabel = '';\n          this.form.reset();\n          // this.showToast('success');\n        } else {\n          console.error(res);\n          // this.showToast('danger');\n        }\n      });\n    } else {\n      console.error('Form invalid');\n      console.error(this.form);\n      console.log(this.form.getRawValue());\n    }\n  }\n\n  public onAvatarFileChanged(event) {\n    const file: File = event.target.files[0];\n    if (file && file.name) {\n      this.avatarUploadLabel = file.name;\n      this.dbService.uploadAvatar(file).subscribe((res: any) => {\n        if (res.id) {\n          this.avatarId = res.id;\n        }\n      });\n    }\n  }\n\n  private showToast(status) {\n    // const title = status === 'success' ? 'Success' : 'Error';\n    // const message = status === 'success' ? 'Cucu posted!' : 'Error. Please try again later';\n    // this.toastrService.show(\n    //   message,\n    //   title,\n    //   {status});\n  }\n\n  get inviteUrl() {\n    return this.form.get('inviteUrl') as FormControl;\n  }\n\n  get topic() {\n    return this.form.get('topic') as FormControl;\n  }\n\n  get userName() {\n    return this.form.get('userName') as FormControl;\n  }\n\n  get participantsLimit() {\n    return this.form.get('participantsLimit') as FormControl;\n  }\n\n  get language() {\n    return this.form.get('language') as FormControl;\n  }\n\n  get day() {\n    return this.form.get('day') as FormControl;\n  }\n\n  get time() {\n    return this.form.get('time') as FormControl;\n  }\n\n  handleDateChange(event) {\n    console.log(event);\n  }\n\n  private getTimeSlots(day: string) {\n    const timeSlots = [];\n    let currentHour = new Date().getHours();\n    const currentMinutes = new Date().getMinutes();\n    let offset = currentMinutes > 30 ? 1 : 0;\n\n    if (day !== 'Today') {\n      currentHour = 0;\n      offset = 0;\n    }\n    for (let i = currentHour + offset; i < 24; i++) {\n      const slot = Math.floor(i) + ':';\n      timeSlots.push(slot + '00');\n      timeSlots.push(slot + '30');\n    }\n    return timeSlots;\n  }\n\n  public elementStatus(control: FormControl) {\n    return control.valid || !control.dirty ? '' : 'danger';\n  }\n}\n\nexport function validateInviteUrl(control: AbstractControl) {\n  if (control && control.value && !control.value.includes('hangouts.google.com')\n    && !control.value.includes('join.skype.com')\n    && !control.value.includes('zoom.us')) {\n    return {validInviteUrl: false};\n  }\n  return null;\n}\n\n\n","<nb-card [size]=\"'medium'\">\n\n  <nb-card-body class=\"example-items-col\">\n    <form [formGroup]=\"form\">\n      <!-- Invite URL -->\n      <div class=\"form-group\">\n        <nb-form-field>\n          <nb-icon nbPrefix icon=\"link-outline\" pack=\"eva\"></nb-icon>\n          <input [formControl]=\"inviteUrl\" type=\"text\" nbInput fullWidth [shape]=\"componentShape\"\n                 placeholder=\"Invite Link (Hangouts, Skype or Zoom)\" [fieldSize]=\"'large'\"\n                 nbTooltip=\"This is a tooltip\" nbTooltipStatus=\"primary\" [status]=\"elementStatus(inviteUrl)\"\n                 #inviteUrlInput>\n        </nb-form-field>\n      </div>\n      <!-- Topic -->\n      <div class=\"form-group\">\n        <nb-form-field>\n          <nb-icon nbPrefix icon=\"heart-outline\" pack=\"eva\"></nb-icon>\n          <input [formControl]=\"topic\" type=\"text\" nbInput fullWidth [shape]=\"componentShape\"\n                 placeholder=\"What's your Cucu about? Yoga, Reading, …\"\n                 [fieldSize]=\"componentSize\" [status]=\"elementStatus(topic)\"\n                 id=\"topic\">\n        </nb-form-field>\n      </div>\n      <!-- Participiants limit & Language -->\n      <div class=\"row\">\n        <div class=\"col-lg-6 col-md-12 col-sm-12\">\n          <div class=\"form-group\">\n            <nb-form-field>\n              <nb-icon nbPrefix icon=\"people-outline\" pack=\"eva\"></nb-icon>\n              <input [formControl]=\"participantsLimit\" fullWidth nbInput type=\"text\"\n                     placeholder=\"Enter participants limit\"\n                     [status]=\"elementStatus(participantsLimit)\"\n                     [shape]=\"componentShape\"\n                     [nbAutocomplete]=\"participantsAutocomplete\" [fieldSize]=\"componentSize\"/>\n              <nb-autocomplete #participantsAutocomplete>\n                <nb-option *ngFor=\"let p of (filteredParticipantsOptions$ | async)\" [value]=\"p\">\n                  {{ p }}\n                </nb-option>\n              </nb-autocomplete>\n            </nb-form-field>\n          </div>\n        </div>\n        <div class=\"col-lg-6 col-md-12 col-sm-12\">\n          <div class=\"form-group\">\n            <nb-select [formControl]=\"language\" placeholder=\"Select Language\" [size]=\"componentSize\"\n                       [shape]=\"componentShape\" fullWidth>\n              <nb-option *ngFor=\"let l of languages\" [value]=\"l.short\">{{l.name}}</nb-option>\n            </nb-select>\n          </div>\n        </div>\n      </div>\n\n\n      <!-- Day and Time -->\n      <div class=\"row\">\n        <div class=\"col-lg-6 col-md-12 col-sm-12\">\n          <div class=\"form-group\">\n            <nb-form-field>\n              <nb-select [formControl]=\"day\" placeholder=\"Select Day\" [selected]=\"'Today'\"\n                         [shape]=\"componentShape\" [size]=\"componentSize\" fullWidth>\n                <nb-option [value]=\"'Today'\">Today</nb-option>\n                <nb-option [value]=\"'Tomorrow'\">Tomorrow</nb-option>\n              </nb-select>\n            </nb-form-field>\n          </div>\n        </div>\n        <div class=\"col-lg-6 col-md-12 col-sm-12\">\n          <div class=\"form-group\">\n            <nb-form-field>\n              <nb-icon nbPrefix icon=\"clock-outline\" pack=\"eva\"></nb-icon>\n              <input [formControl]=\"time\" fullWidth nbInput type=\"text\" placeholder=\"Enter time\"\n                     [status]=\"elementStatus(time)\" [shape]=\"componentShape\"\n                     [nbAutocomplete]=\"timeAutocomplete\" [fieldSize]=\"componentSize\"/>\n              <nb-autocomplete #timeAutocomplete>\n                <nb-option *ngFor=\"let t of (filteredTimeOptions$ | async)\" [value]=\"t\">\n                  {{ t }}\n                </nb-option>\n              </nb-autocomplete>\n            </nb-form-field>\n          </div>\n        </div>\n      </div>\n\n      <!-- Name & Avatar -->\n      <div class=\"row\">\n        <div class=\"col-lg-6 col-md-12 col-sm-12\">\n          <div class=\"form-group\">\n            <nb-form-field>\n              <nb-icon nbPrefix icon=\"person-outline\" pack=\"eva\"></nb-icon>\n              <input [formControl]=\"userName\" type=\"text\" nbInput fullWidth [shape]=\"componentShape\"\n                     [status]=\"elementStatus(userName)\"\n                     placeholder=\"Your Name\"\n                     [fieldSize]=\"componentSize\">\n            </nb-form-field>\n          </div>\n        </div>\n        <div class=\"col-lg-6 col-md-12 col-sm-12\">\n          <div class=\"form-group\">\n            <button (click)=\"avatarInput.click()\" nbButton fullWidth status=\"primary\"\n                    [shape]=\"componentShape\" [size]=\"componentSize\">\n              Upload Avatar\n            </button>\n            <input\n              style=\"display: none\" type=\"file\" (change)=\"onAvatarFileChanged($event)\"\n              [accept]=\"'image/x-png, image/jpeg'\"\n              #avatarInput>\n            <p>{{avatarUploadLabel}}</p>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"form-group\">\n        <button (click)=\"postCucu()\" nbButton hero [type]=\"'submit'\" status=\"primary\" fullWidth\n                [shape]=\"'rectangle'\" [size]=\"'large'\">\n          Post\n        </button>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n\n\n\n\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AddCucuComponent} from './add-cucu.component';\nimport {\n  NbAutocompleteModule,\n  NbButtonModule,\n  NbCardModule,\n  NbDatepickerModule,\n  NbFormFieldModule,\n  NbIconModule,\n  NbInputModule, NbSelectModule, NbToastrModule, NbToastrService,\n  NbTooltipModule\n} from '@nebular/theme';\n\n\n@NgModule({\n  declarations: [AddCucuComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NbCardModule,\n    NbFormFieldModule,\n    NbIconModule,\n    NbInputModule,\n    NbDatepickerModule,\n    NbButtonModule,\n    NbTooltipModule,\n    NbSelectModule,\n    NbAutocompleteModule,\n    NbToastrModule,\n  ],\n  exports: [AddCucuComponent],\n  // providers: [\n  //   NbToastrService,\n  // ],\n})\nexport class AddCucuModule {\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Cucu} from '../../models/cucu';\nimport {DbService} from '../../services/db/db.service';\nimport {isToday} from '../../util/date.util';\nimport {getEmojiForLang} from '../../util/languages.util';\n@Component({\n  selector: 'app-cucu-box',\n  templateUrl: './cucu-box.component.html',\n  styleUrls: ['./cucu-box.component.scss']\n})\nexport class CucuBoxComponent implements OnInit {\n\n  @Input() cucu: Cucu;\n  time: string;\n  day: string;\n  imageUrl: string;\n\n  constructor(public dbService: DbService) {\n  }\n\n  ngOnInit() {\n    if (this.cucu.avatarId && this.cucu.avatarId.length > 0) {\n      this.imageUrl = `${this.dbService.getImageBaseUrl()}/${this.cucu.avatarId}`;\n    }\n    const date = new Date(Date.parse(this.cucu.startDateString));\n    this.time = date.toLocaleTimeString(\n      [],\n      {hour: '2-digit', minute: '2-digit'}\n    );\n\n    this.day = isToday(date) ? 'Today' : 'Tomorrow';\n  }\n\n  getLangEmoji(lang: string) {\n    return getEmojiForLang(lang);\n  }\n\n\n}\n","<nb-card>\n  <nb-card-header>\n    <nb-user size=\"giant\"\n             [picture]=\"imageUrl\"\n             [name]=\"cucu.userName\"\n             [title]=\"day + ' at ' + time\"\n             [badgeText]=\"cucu.language\"\n             [badgeStatus]=\"'primary'\"\n             [badgePosition]=\"'bottom right'\">\n    </nb-user>\n  </nb-card-header>\n  <nb-card-body>\n    {{cucu.topic}}\n  </nb-card-body>\n  <nb-card-footer>\n    <button nbButton status=\"primary\" [shape]=\"'rectangle'\">Join</button>\n  </nb-card-footer>\n</nb-card>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbDatepickerModule,\n  NbFormFieldModule,\n  NbIconModule,\n  NbInputModule, NbSelectModule,\n  NbTooltipModule, NbUserModule\n} from '@nebular/theme';\nimport {CucuBoxComponent} from './cucu-box.component';\n\n\n@NgModule({\n  declarations: [CucuBoxComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NbCardModule,\n    NbUserModule,\n    NbButtonModule,\n  ],\n  exports: [CucuBoxComponent]\n})\nexport class CucuBoxModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {BehaviorSubject, combineLatest, concat, forkJoin, zip} from 'rxjs';\nimport {Cucu} from '../../models/cucu';\nimport {map} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DbService {\n\n  private baseUrl = 'http://localhost:3200';\n  // private baseUrl = 'https://api.cucuit.com';\n\n  private cucus$ = new BehaviorSubject<Cucu[]>([]);\n\n  constructor(private http: HttpClient,\n              private translate: TranslateService) {\n    this.fetchCucus(translate.currentLang);\n    this.translate.onLangChange.subscribe((lang => this.fetchCucus(lang)));\n  }\n\n  get cucus() {\n    return this.cucus$;\n  }\n\n  public fetchCucus(lang: string) {\n    const date = new Date();\n    date.setMinutes(date.getMinutes() - 15);\n    this.http.get(`${this.baseUrl}/cucus/${lang}/after/${date.toUTCString()}`)\n      .subscribe((cucus: Cucu[]) => {\n        this.cucus$.next(cucus.slice(0, 15));\n      });\n  }\n\n  public createCucu(cucu: Cucu) {\n    return this.http.post(`${this.baseUrl}/cucus`, cucu).pipe(\n      map(res => {\n        this.fetchCucus(this.translate.currentLang);\n        return res;\n      })\n    );\n  }\n\n  public incrementClickCounter(id: string) {\n    return this.http.get(`${this.baseUrl}/cucus/${id}/click`);\n  }\n\n  public uploadAvatar(file: File) {\n    const fd = new FormData();\n    fd.append('file', file);\n    return this.http.post(`${this.baseUrl}/images`, fd);\n  }\n\n  public getImageBaseUrl() {\n    return `${this.baseUrl}/images`;\n  }\n}\n","export const addDays = days => date => {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n};\n\nexport const isToday = (someDate) => {\n  const today = new Date();\n  return someDate.getDate() === today.getDate() &&\n    someDate.getMonth() === today.getMonth() &&\n    someDate.getFullYear() === today.getFullYear();\n};\n","const langs: { name: string, short: string, emoji: string }[] = [\n  {name: 'Italiano 🇮🇹', short: 'it', emoji: '🇮🇹'},\n  {name: 'Español 🇪🇸', short: 'es', emoji: '🇪🇸'},\n  {name: 'Deutsch 🇩🇪', short: 'de', emoji: '🇩🇪'},\n  {name: 'English 🇬🇧', short: 'en', emoji: '🇬🇧'},\n];\n\nexport const getEmojiForLang = (lang: string): string => {\n  return langs.find(l => l.short === lang).emoji;\n};\n\nexport const getLangs = () => {\n  return langs;\n};\n"]}